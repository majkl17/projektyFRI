#BlueJ class context
comment0.target=HraciePole
comment0.text=\r\n\ Trieda\ HraciePole\ sluzi\ na\ vykreslovanie\ a\ ukladanie\ pozicii\ jednotlivych\ policok.\ \r\n\ HraciePole\ je\ zoskupenie\ policok\ do\ 2-rozmerneho\ pola\ poli.\ Na\ ukladanie\ pozicii\ sa\r\n\ vyuzivaju\ ArrayListy\ z\ dovodu\ ich\ dynamickosti\ a\ lubovolneho\ zvacsovania\ a\ zmensovania\r\n\ zoznamu,\ co\ je\ pri\ poli\ (array)\ nemozne\ -\ ma\ fixny\ pocet\ prvkov.\ Trieda\ dokaze\ graficky\ \r\n\ (textovo)\ v\ terminali\ vykreslit\ celu\ hraciu\ plochu.\ Okrem\ ineho\ ma\ za\ ulohu\ nahodne\ generovanie\r\n\ min\ kazdy\ jeden\ krat,\ co\ sa\ program\ zapne.\ \r\n\ \r\n\ @author\ Michal\ Pa\u017Eitn\u00FD\r\n\ @version\ 4.12.2022\r\n
comment1.params=pocetStlpcov\ pocetRiadkov\ pocetMin
comment1.target=HraciePole(int,\ int,\ int)
comment1.text=\r\n\ Parametrick\u00FD\ kon\u0161truktor\ s\ parametrami\ pocetStlpcov,\ pocetRiadkov\ a\ pocetMin\ vytvori\ novu\ hraciu\ plochu.\r\n\ Kazdy\ parameter\ ma\ svoje\ opodstatnenie\:\ pocetStlpcov\ uklada\ kolko\ by\ malo\ mat\ hracie\ pole\ stlpcov,\ to\ iste\r\n\ je\ pocetRiadkov\ a\ aj\ pocetMin.\ V\ konstruktore\ sa\ dalej\ vola\ metoda,\ ktora\ nastavuje\ celkovy\ pocet\ policok,\r\n\ ktore\ mozu\ byt\ odhalene\ bez\ toho\ aby\ boli\ miny.\r\n
comment10.params=
comment10.target=int\ getPocetNezaminovanychPolicok()
comment10.text=\r\n\ Vracia\ celkovy\ pocet\ policok,\ ktore\ treba\ v\ hracom\ poli\ odhalit,\ ale\ nesmu\ obsahovat\ minu.\r\n
comment11.params=maximum
comment11.target=int\ getNahodneCislo(int)
comment11.text=\r\n\ Vygeneruje\ nahodne\ cislo.\ Metoda\ sa\ vyuziva\ pri\ nahodnom\ spawnovani\ min.\ \r\n
comment12.params=hraciePole
comment12.target=int\ zratajPocetOdhalenychPolicok(Policko[][])
comment12.text=\r\nSpocita\ v\ dvojrozmernom\ hracom\ poli\ pocet\ vsetkych\ odhalenych\ policok\ a\ vrati\ ich\ pocet\ ako\ integer.\r\nJe\ tu\ pouzity\ vnoreny\ cyklus\ for\ ne\ prechadzanie\ celej\ "tabulky"\ -\ cize\ riadkov\ a\ stlpcov.\r\n
comment13.params=hraciePole
comment13.target=int\ zratajPocetOznacenychPolicok(Policko[][])
comment13.text=\r\nSpocita\ v\ dvojrozmernom\ hracom\ poli\ pocet\ vsetkych\ oznacenych\ policok\ a\ vrati\ ich\ pocet\ ako\ integer.\r\nJe\ tu\ pouzity\ vnoreny\ cyklus\ for\ ne\ prechadzanie\ celej\ "tabulky"\ -\ cize\ riadkov\ a\ stlpcov.\r\n
comment14.params=
comment14.target=Policko[][]\ getHraciePole()
comment14.text=\r\n\ Vrati\ hracie\ pole\ zlozene\ z\ 2-rozmerneho\ pola\ poli\ policok\r\n
comment15.params=
comment15.target=void\ setHraciePole()
comment15.text=\r\n\ Nastavi\ hracie\ pole\ na\ pociatocne\ hodnoty,\ s\ tym,\ ze\ nahodne\ umiestni\ miny\ po\ celej\ hracej\ ploche\r\n
comment16.params=prvaPozicia
comment16.target=void\ spawnovanieMin(SuradnicePolicka)
comment16.text=\r\n\ Vygeneruje\ miny\ na\ nahodnej\ pozicii\ v\ hracom\ poli.\ Dava\ pozor\ na\ to,\ ci\ nie\ su\ na\ jednom\ policku\ dve\ a\ viac\ min.\r\n\ Kontroluje\ prvy\ vyber\ hraca,\ aby\ sa\ nestalo,\ ze\ hned\ na\ zaciatku\ by\ si\ vybral\ bombu.\r\n
comment17.params=suradnice
comment17.target=java.util.ArrayList\ getPozicieSusednychPolicok\u0000(SuradnicePolicka)
comment17.text=\r\n\ Vracia\ suradnice\ susednych\ policok\ pomocou\ vnoreneho\ cyklu\ for\ a\ arraylistu\r\n
comment18.params=riadok\ stlpec\ hraciePole
comment18.target=int\ zratajOkolneMiny(int,\ int,\ Policko[][])
comment18.text=\r\n\ Metoda\ zrata\ vsetky\ miny\ nachadzajuce\ sa\ v\ okoli\ policka\ pomocou\ vnoreneho\ cyklu\ for\ pre\ kazdy\ riadok\ a\ stlpec.\r\n\ Je\ to\ podobny\ postup\ ako\ pri\ zistovani\ pozicie\ susednych\ policok.\r\n
comment19.params=hraciePole
comment19.target=void\ odhalVsetkyPolicka(Policko[][])
comment19.text=\r\n\ Zobrazi\ vyriesene\ hracie\ pole\ s\ odhalenymi\ minami.\ \r\n\ Vyuziva\ sa\ pri\ vyhre\ alebo\ prehre.\ Vyuziva\ vnoreny\r\n\ cyklus\ for.\ \r\n
comment2.params=
comment2.target=int\ getPocetRiadkov()
comment2.text=\r\n\ Vrati,\ kolko\ riadkov\ ma\ hracie\ pole\ (datovy\ typ\ integer)\r\n
comment20.params=hraciePole
comment20.target=void\ vykresliHraciePole(Policko[][])
comment20.text=\r\n\ Vykresli\ hernu\ plochu\ v\ okne\ terminalu/konzole\r\n
comment21.params=suradnice\ hraciePole
comment21.target=void\ vyplnPrazdnePolicka(SuradnicePolicka,\ Policko[][])
comment21.text=\r\n\ Rekurzivna\ metoda,\ ktora\ po\ odhaleni\ policka\ s\ nulou\ (ziadnou\ minou\ v\ okoli)\ odhali\ aj\ ostatne\ policka\ v\ okoli,\ s\ tym\ ze\ dostane\ sa\ len\ potial,\ kde\ sa\ nachadza\ mina.\r\n\ Mina\ sa\ neodhali\ a\ posledne\ policko,\ ktore\ sa\ odhali\ bude\ zobrazovat\ informaciu\ o\ pocte\ min\ v\ okoli\ policka,\ tak\ ako\ to\ je\ aj\ v\ originalnych\ minach.\ To\ znamena\ ze\ na\ hracom\ poli\ \r\n\ bude\ mozne\ vidiet\ oblast\ napriklad\ aj\ s\ 5timi\ 0mi\ a\ 3mi\ ciselnymi\ informaciami\ o\ pocte\ min\ v\ okoli.\r\n
comment3.params=pocetRiadkov
comment3.target=void\ setPocetRiadkov(int)
comment3.text=\r\n\ Nastavi\ pocet\ riadkov\ v\ hracom\ poli\r\n
comment4.params=
comment4.target=int\ getPocetStlpcov()
comment4.text=\r\n\ Vrati,\ kolko\ stlpcov\ ma\ hracie\ pole\ (datovy\ typ\ integer)\r\n
comment5.params=pocetStlpcov
comment5.target=void\ setPocetStlpcov(int)
comment5.text=\r\n\ Nastavi\ pocet\ stlpcov\ v\ hracom\ poli\r\n
comment6.params=
comment6.target=int\ getPocetMin()
comment6.text=\r\n\ Vrati,\ kolko\ min\ ma\ hracie\ pole\ (datovy\ typ\ integer)\r\n
comment7.params=pocetMin
comment7.target=void\ setPocetMin(int)
comment7.text=\r\n\ Nastavi\ pocet\ min\ v\ hracom\ poli\r\n
comment8.params=
comment8.target=java.util.ArrayList\ getMiestaOznacenia()
comment8.text=\r\n\ Vracia\ miesta\ policok,\ ktore\ boli\ oznacene\ z\ arraylistu\r\n
comment9.params=pocetNezaminovanychPolicok
comment9.target=void\ setPocetNezaminovanychPolicok(int)
comment9.text=\r\n\ Nastavuje\ celkovy\ pocet\ policok,\ ktore\ treba\ v\ hracom\ poli\ odhalit\ ale,\ nesmu\ obsahovat\ minu.\r\n
numComments=22
